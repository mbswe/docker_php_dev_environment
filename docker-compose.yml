version: '3'
services:
  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    build:
      context: .
      dockerfile: config/nginx/Dockerfile
    depends_on:
      - php-fpm
      - database
    ports:
      - ${NGINX_HTTP_PORT}:80
    volumes:
      - ./www:/var/www/html
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
  php-fpm:
    container_name: ${COMPOSE_PROJECT_NAME}_php_${PHP_VERSION}
    build:
      context: .
      dockerfile: config/php/${PHP_VERSION}/Dockerfile
    volumes:
      - ./www:/var/www/html
      - ./config/php/${PHP_VERSION}/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./config/php/${PHP_VERSION}/fpm.conf:/usr/local/etc/php-fpm.d/xcustom.conf
  database:
    container_name: ${COMPOSE_PROJECT_NAME}_database_${DB_TYPE}_${DB_VERSION}
    build:
      context: .
      dockerfile: config/database/${DB_TYPE}/${DB_VERSION}/Dockerfile
    ports:
      - ${DB_PORT}:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
    volumes:
      - db:/var/lib/mysql
  phpmyadmin:
    container_name: ${COMPOSE_PROJECT_NAME}_phpmyadmin
    build:
      context: .
      dockerfile: config/phpmyadmin/Dockerfile
    ports:
      - ${PHPMYADMIN_HTTP_PORT}:80
    links:
      - database
    environment:
      PMA_HOST: database
      PMA_PORT: ${DB_PORT}
  mailhog:
    container_name: ${COMPOSE_PROJECT_NAME}_mailhog
    build:
      context: .
      dockerfile: config/mailhog/Dockerfile
    logging:
      driver: 'none'
    ports:
      - ${MAILHOG_SMTP_PORT}:1025
      - ${MAILHOG_WEBUI_PORT}:8025
volumes:
  db:
    name: ${COMPOSE_PROJECT_NAME}_${DB_TYPE}_${DB_VERSION}
